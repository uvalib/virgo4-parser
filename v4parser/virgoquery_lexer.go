// Code generated from VirgoQueryLexer.g4 by ANTLR 4.9.1. DO NOT EDIT.

package v4parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 30, 308,
	8, 1, 8, 1, 8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5,
	4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9,
	11, 4, 12, 9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16,
	4, 17, 9, 17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4,
	22, 9, 22, 4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27,
	9, 27, 4, 28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9,
	32, 4, 33, 9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37,
	4, 38, 9, 38, 4, 39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 3, 2, 6, 2, 88,
	10, 2, 13, 2, 14, 2, 89, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 104, 10, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19,
	3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3,
	22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 5,
	26, 229, 10, 26, 3, 26, 3, 26, 3, 27, 6, 27, 234, 10, 27, 13, 27, 14, 27,
	235, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 5, 31, 254, 10, 31, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 5, 32, 262, 10, 32, 3, 33, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 33, 3, 33, 5, 33, 271, 10, 33, 3, 34, 6, 34, 274,
	10, 34, 13, 34, 14, 34, 275, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36,
	3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3,
	38, 3, 39, 6, 39, 296, 10, 39, 13, 39, 14, 39, 297, 3, 40, 3, 40, 3, 40,
	3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 2, 2, 42, 6, 2, 8, 3, 10, 4,
	12, 5, 14, 6, 16, 7, 18, 8, 20, 9, 22, 10, 24, 11, 26, 12, 28, 13, 30,
	14, 32, 15, 34, 16, 36, 17, 38, 18, 40, 19, 42, 2, 44, 2, 46, 20, 48, 21,
	50, 2, 52, 22, 54, 2, 56, 23, 58, 24, 60, 2, 62, 2, 64, 25, 66, 26, 68,
	27, 70, 28, 72, 2, 74, 2, 76, 29, 78, 2, 80, 30, 82, 2, 84, 2, 6, 2, 3,
	4, 5, 6, 5, 2, 11, 12, 15, 15, 34, 34, 4, 2, 36, 36, 8222, 8223, 10, 2,
	11, 12, 15, 15, 34, 34, 36, 36, 42, 43, 125, 125, 127, 127, 8222, 8223,
	4, 2, 47, 47, 49, 59, 2, 314, 2, 8, 3, 2, 2, 2, 2, 10, 3, 2, 2, 2, 2, 12,
	3, 2, 2, 2, 2, 14, 3, 2, 2, 2, 2, 16, 3, 2, 2, 2, 2, 18, 3, 2, 2, 2, 2,
	20, 3, 2, 2, 2, 2, 22, 3, 2, 2, 2, 2, 24, 3, 2, 2, 2, 2, 26, 3, 2, 2, 2,
	2, 28, 3, 2, 2, 2, 2, 30, 3, 2, 2, 2, 2, 32, 3, 2, 2, 2, 2, 34, 3, 2, 2,
	2, 2, 36, 3, 2, 2, 2, 2, 38, 3, 2, 2, 2, 3, 40, 3, 2, 2, 2, 3, 42, 3, 2,
	2, 2, 3, 44, 3, 2, 2, 2, 3, 46, 3, 2, 2, 2, 3, 48, 3, 2, 2, 2, 3, 50, 3,
	2, 2, 2, 3, 52, 3, 2, 2, 2, 3, 54, 3, 2, 2, 2, 3, 56, 3, 2, 2, 2, 3, 58,
	3, 2, 2, 2, 3, 60, 3, 2, 2, 2, 4, 62, 3, 2, 2, 2, 4, 64, 3, 2, 2, 2, 4,
	66, 3, 2, 2, 2, 4, 68, 3, 2, 2, 2, 4, 70, 3, 2, 2, 2, 4, 72, 3, 2, 2, 2,
	4, 74, 3, 2, 2, 2, 4, 76, 3, 2, 2, 2, 4, 78, 3, 2, 2, 2, 5, 80, 3, 2, 2,
	2, 5, 82, 3, 2, 2, 2, 5, 84, 3, 2, 2, 2, 6, 87, 3, 2, 2, 2, 8, 91, 3, 2,
	2, 2, 10, 93, 3, 2, 2, 2, 12, 103, 3, 2, 2, 2, 14, 105, 3, 2, 2, 2, 16,
	107, 3, 2, 2, 2, 18, 113, 3, 2, 2, 2, 20, 127, 3, 2, 2, 2, 22, 134, 3,
	2, 2, 2, 24, 142, 3, 2, 2, 2, 26, 150, 3, 2, 2, 2, 28, 160, 3, 2, 2, 2,
	30, 171, 3, 2, 2, 2, 32, 178, 3, 2, 2, 2, 34, 185, 3, 2, 2, 2, 36, 189,
	3, 2, 2, 2, 38, 193, 3, 2, 2, 2, 40, 195, 3, 2, 2, 2, 42, 199, 3, 2, 2,
	2, 44, 203, 3, 2, 2, 2, 46, 207, 3, 2, 2, 2, 48, 209, 3, 2, 2, 2, 50, 211,
	3, 2, 2, 2, 52, 216, 3, 2, 2, 2, 54, 228, 3, 2, 2, 2, 56, 233, 3, 2, 2,
	2, 58, 237, 3, 2, 2, 2, 60, 241, 3, 2, 2, 2, 62, 245, 3, 2, 2, 2, 64, 253,
	3, 2, 2, 2, 66, 261, 3, 2, 2, 2, 68, 270, 3, 2, 2, 2, 70, 273, 3, 2, 2,
	2, 72, 277, 3, 2, 2, 2, 74, 281, 3, 2, 2, 2, 76, 286, 3, 2, 2, 2, 78, 290,
	3, 2, 2, 2, 80, 295, 3, 2, 2, 2, 82, 299, 3, 2, 2, 2, 84, 304, 3, 2, 2,
	2, 86, 88, 9, 2, 2, 2, 87, 86, 3, 2, 2, 2, 88, 89, 3, 2, 2, 2, 89, 87,
	3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 7, 3, 2, 2, 2, 91, 92, 7, 42, 2, 2,
	92, 9, 3, 2, 2, 2, 93, 94, 7, 43, 2, 2, 94, 11, 3, 2, 2, 2, 95, 96, 7,
	67, 2, 2, 96, 97, 7, 80, 2, 2, 97, 104, 7, 70, 2, 2, 98, 99, 7, 81, 2,
	2, 99, 104, 7, 84, 2, 2, 100, 101, 7, 80, 2, 2, 101, 102, 7, 81, 2, 2,
	102, 104, 7, 86, 2, 2, 103, 95, 3, 2, 2, 2, 103, 98, 3, 2, 2, 2, 103, 100,
	3, 2, 2, 2, 104, 13, 3, 2, 2, 2, 105, 106, 7, 60, 2, 2, 106, 15, 3, 2,
	2, 2, 107, 108, 7, 118, 2, 2, 108, 109, 7, 107, 2, 2, 109, 110, 7, 118,
	2, 2, 110, 111, 7, 110, 2, 2, 111, 112, 7, 103, 2, 2, 112, 17, 3, 2, 2,
	2, 113, 114, 7, 108, 2, 2, 114, 115, 7, 113, 2, 2, 115, 116, 7, 119, 2,
	2, 116, 117, 7, 116, 2, 2, 117, 118, 7, 112, 2, 2, 118, 119, 7, 99, 2,
	2, 119, 120, 7, 110, 2, 2, 120, 121, 7, 97, 2, 2, 121, 122, 7, 118, 2,
	2, 122, 123, 7, 107, 2, 2, 123, 124, 7, 118, 2, 2, 124, 125, 7, 110, 2,
	2, 125, 126, 7, 103, 2, 2, 126, 19, 3, 2, 2, 2, 127, 128, 7, 99, 2, 2,
	128, 129, 7, 119, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131, 7, 106, 2, 2,
	131, 132, 7, 113, 2, 2, 132, 133, 7, 116, 2, 2, 133, 21, 3, 2, 2, 2, 134,
	135, 7, 117, 2, 2, 135, 136, 7, 119, 2, 2, 136, 137, 7, 100, 2, 2, 137,
	138, 7, 108, 2, 2, 138, 139, 7, 103, 2, 2, 139, 140, 7, 101, 2, 2, 140,
	141, 7, 118, 2, 2, 141, 23, 3, 2, 2, 2, 142, 143, 7, 109, 2, 2, 143, 144,
	7, 103, 2, 2, 144, 145, 7, 123, 2, 2, 145, 146, 7, 121, 2, 2, 146, 147,
	7, 113, 2, 2, 147, 148, 7, 116, 2, 2, 148, 149, 7, 102, 2, 2, 149, 25,
	3, 2, 2, 2, 150, 151, 7, 114, 2, 2, 151, 152, 7, 119, 2, 2, 152, 153, 7,
	100, 2, 2, 153, 154, 7, 110, 2, 2, 154, 155, 7, 107, 2, 2, 155, 156, 7,
	117, 2, 2, 156, 157, 7, 106, 2, 2, 157, 158, 7, 103, 2, 2, 158, 159, 7,
	102, 2, 2, 159, 27, 3, 2, 2, 2, 160, 161, 7, 107, 2, 2, 161, 162, 7, 102,
	2, 2, 162, 163, 7, 103, 2, 2, 163, 164, 7, 112, 2, 2, 164, 165, 7, 118,
	2, 2, 165, 166, 7, 107, 2, 2, 166, 167, 7, 104, 2, 2, 167, 168, 7, 107,
	2, 2, 168, 169, 7, 103, 2, 2, 169, 170, 7, 116, 2, 2, 170, 29, 3, 2, 2,
	2, 171, 172, 7, 104, 2, 2, 172, 173, 7, 107, 2, 2, 173, 174, 7, 110, 2,
	2, 174, 175, 7, 118, 2, 2, 175, 176, 7, 103, 2, 2, 176, 177, 7, 116, 2,
	2, 177, 31, 3, 2, 2, 2, 178, 179, 7, 102, 2, 2, 179, 180, 7, 99, 2, 2,
	180, 181, 7, 118, 2, 2, 181, 182, 7, 103, 2, 2, 182, 183, 3, 2, 2, 2, 183,
	184, 8, 15, 2, 2, 184, 33, 3, 2, 2, 2, 185, 186, 7, 125, 2, 2, 186, 187,
	3, 2, 2, 2, 187, 188, 8, 16, 3, 2, 188, 35, 3, 2, 2, 2, 189, 190, 5, 6,
	2, 2, 190, 191, 3, 2, 2, 2, 191, 192, 8, 17, 4, 2, 192, 37, 3, 2, 2, 2,
	193, 194, 11, 2, 2, 2, 194, 39, 3, 2, 2, 2, 195, 196, 9, 3, 2, 2, 196,
	197, 3, 2, 2, 2, 197, 198, 8, 19, 5, 2, 198, 41, 3, 2, 2, 2, 199, 200,
	7, 42, 2, 2, 200, 201, 3, 2, 2, 2, 201, 202, 8, 20, 6, 2, 202, 43, 3, 2,
	2, 2, 203, 204, 7, 43, 2, 2, 204, 205, 3, 2, 2, 2, 205, 206, 8, 21, 7,
	2, 206, 45, 3, 2, 2, 2, 207, 208, 7, 93, 2, 2, 208, 47, 3, 2, 2, 2, 209,
	210, 7, 95, 2, 2, 210, 49, 3, 2, 2, 2, 211, 212, 7, 125, 2, 2, 212, 213,
	3, 2, 2, 2, 213, 214, 8, 24, 3, 2, 214, 215, 8, 24, 8, 2, 215, 51, 3, 2,
	2, 2, 216, 217, 7, 127, 2, 2, 217, 218, 3, 2, 2, 2, 218, 219, 8, 25, 9,
	2, 219, 53, 3, 2, 2, 2, 220, 221, 7, 67, 2, 2, 221, 222, 7, 80, 2, 2, 222,
	229, 7, 70, 2, 2, 223, 224, 7, 81, 2, 2, 224, 229, 7, 84, 2, 2, 225, 226,
	7, 80, 2, 2, 226, 227, 7, 81, 2, 2, 227, 229, 7, 86, 2, 2, 228, 220, 3,
	2, 2, 2, 228, 223, 3, 2, 2, 2, 228, 225, 3, 2, 2, 2, 229, 230, 3, 2, 2,
	2, 230, 231, 8, 26, 10, 2, 231, 55, 3, 2, 2, 2, 232, 234, 10, 4, 2, 2,
	233, 232, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2, 235, 233, 3, 2, 2, 2, 235,
	236, 3, 2, 2, 2, 236, 57, 3, 2, 2, 2, 237, 238, 5, 6, 2, 2, 238, 239, 3,
	2, 2, 2, 239, 240, 8, 28, 4, 2, 240, 59, 3, 2, 2, 2, 241, 242, 11, 2, 2,
	2, 242, 243, 3, 2, 2, 2, 243, 244, 8, 29, 11, 2, 244, 61, 3, 2, 2, 2, 245,
	246, 7, 60, 2, 2, 246, 247, 3, 2, 2, 2, 247, 248, 8, 30, 12, 2, 248, 63,
	3, 2, 2, 2, 249, 250, 7, 86, 2, 2, 250, 254, 7, 81, 2, 2, 251, 252, 7,
	47, 2, 2, 252, 254, 7, 47, 2, 2, 253, 249, 3, 2, 2, 2, 253, 251, 3, 2,
	2, 2, 254, 65, 3, 2, 2, 2, 255, 256, 7, 67, 2, 2, 256, 257, 7, 72, 2, 2,
	257, 258, 7, 86, 2, 2, 258, 259, 7, 71, 2, 2, 259, 262, 7, 84, 2, 2, 260,
	262, 7, 64, 2, 2, 261, 255, 3, 2, 2, 2, 261, 260, 3, 2, 2, 2, 262, 67,
	3, 2, 2, 2, 263, 264, 7, 68, 2, 2, 264, 265, 7, 71, 2, 2, 265, 266, 7,
	72, 2, 2, 266, 267, 7, 81, 2, 2, 267, 268, 7, 84, 2, 2, 268, 271, 7, 71,
	2, 2, 269, 271, 7, 62, 2, 2, 270, 263, 3, 2, 2, 2, 270, 269, 3, 2, 2, 2,
	271, 69, 3, 2, 2, 2, 272, 274, 9, 5, 2, 2, 273, 272, 3, 2, 2, 2, 274, 275,
	3, 2, 2, 2, 275, 273, 3, 2, 2, 2, 275, 276, 3, 2, 2, 2, 276, 71, 3, 2,
	2, 2, 277, 278, 7, 125, 2, 2, 278, 279, 3, 2, 2, 2, 279, 280, 8, 35, 8,
	2, 280, 73, 3, 2, 2, 2, 281, 282, 7, 127, 2, 2, 282, 283, 3, 2, 2, 2, 283,
	284, 8, 36, 9, 2, 284, 285, 8, 36, 13, 2, 285, 75, 3, 2, 2, 2, 286, 287,
	5, 6, 2, 2, 287, 288, 3, 2, 2, 2, 288, 289, 8, 37, 4, 2, 289, 77, 3, 2,
	2, 2, 290, 291, 11, 2, 2, 2, 291, 292, 3, 2, 2, 2, 292, 293, 8, 38, 11,
	2, 293, 79, 3, 2, 2, 2, 294, 296, 10, 3, 2, 2, 295, 294, 3, 2, 2, 2, 296,
	297, 3, 2, 2, 2, 297, 295, 3, 2, 2, 2, 297, 298, 3, 2, 2, 2, 298, 81, 3,
	2, 2, 2, 299, 300, 9, 3, 2, 2, 300, 301, 3, 2, 2, 2, 301, 302, 8, 40, 9,
	2, 302, 303, 8, 40, 14, 2, 303, 83, 3, 2, 2, 2, 304, 305, 11, 2, 2, 2,
	305, 306, 3, 2, 2, 2, 306, 307, 8, 41, 11, 2, 307, 85, 3, 2, 2, 2, 15,
	2, 3, 4, 5, 89, 103, 228, 235, 253, 261, 270, 275, 297, 15, 7, 4, 2, 7,
	3, 2, 8, 2, 2, 7, 5, 2, 9, 3, 2, 9, 4, 2, 9, 16, 2, 6, 2, 2, 9, 5, 2, 9,
	18, 2, 9, 6, 2, 9, 22, 2, 9, 19, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "SEARCH", "DATE_MODE", "IN_QUOTE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "'title'", "'journal_title'", "'author'", "'subject'",
	"'keyword'", "'published'", "'identifier'", "'filter'", "'date'", "", "",
	"", "", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "LPAREN", "RPAREN", "BOOLEAN", "COLON", "TITLE", "JOURNAL_TITLE", "AUTHOR",
	"SUBJECT", "KEYWORD", "PUBLISHED", "IDENTIFIER", "FILTER", "DATE", "LBRACE",
	"WS1", "ERROR_CHARACTER", "QUOTE", "LBRACKET", "RBRACKET", "RBRACE", "SEARCH_WORD",
	"WS2", "TO", "AFTER", "BEFORE", "DATE_STRING", "WS3", "QUOTE_STR",
}

var lexerRuleNames = []string{
	"WS", "LPAREN", "RPAREN", "BOOLEAN", "COLON", "TITLE", "JOURNAL_TITLE",
	"AUTHOR", "SUBJECT", "KEYWORD", "PUBLISHED", "IDENTIFIER", "FILTER", "DATE",
	"LBRACE", "WS1", "ERROR_CHARACTER", "QUOTE", "LPAREN2", "RPAREN2", "LBRACKET",
	"RBRACKET", "LBRACE1", "RBRACE", "BOOLEAN1", "SEARCH_WORD", "WS2", "ERROR_CHARACTER2",
	"COLON2", "TO", "AFTER", "BEFORE", "DATE_STRING", "LBRACE2", "RBRACE1",
	"WS3", "ERROR_CHARACTER3", "QUOTE_STR", "QUOTE2", "ERROR_CHARACTER4",
}

type VirgoQueryLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewVirgoQueryLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *VirgoQueryLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewVirgoQueryLexer(input antlr.CharStream) *VirgoQueryLexer {
	l := new(VirgoQueryLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "VirgoQueryLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// VirgoQueryLexer tokens.
const (
	VirgoQueryLexerLPAREN          = 1
	VirgoQueryLexerRPAREN          = 2
	VirgoQueryLexerBOOLEAN         = 3
	VirgoQueryLexerCOLON           = 4
	VirgoQueryLexerTITLE           = 5
	VirgoQueryLexerJOURNAL_TITLE   = 6
	VirgoQueryLexerAUTHOR          = 7
	VirgoQueryLexerSUBJECT         = 8
	VirgoQueryLexerKEYWORD         = 9
	VirgoQueryLexerPUBLISHED       = 10
	VirgoQueryLexerIDENTIFIER      = 11
	VirgoQueryLexerFILTER          = 12
	VirgoQueryLexerDATE            = 13
	VirgoQueryLexerLBRACE          = 14
	VirgoQueryLexerWS1             = 15
	VirgoQueryLexerERROR_CHARACTER = 16
	VirgoQueryLexerQUOTE           = 17
	VirgoQueryLexerLBRACKET        = 18
	VirgoQueryLexerRBRACKET        = 19
	VirgoQueryLexerRBRACE          = 20
	VirgoQueryLexerSEARCH_WORD     = 21
	VirgoQueryLexerWS2             = 22
	VirgoQueryLexerTO              = 23
	VirgoQueryLexerAFTER           = 24
	VirgoQueryLexerBEFORE          = 25
	VirgoQueryLexerDATE_STRING     = 26
	VirgoQueryLexerWS3             = 27
	VirgoQueryLexerQUOTE_STR       = 28
)

// VirgoQueryLexer modes.
const (
	VirgoQueryLexerSEARCH = iota + 1
	VirgoQueryLexerDATE_MODE
	VirgoQueryLexerIN_QUOTE
)
