// Code generated from VirgoQueryLexer.g4 by ANTLR 4.9.3. DO NOT EDIT.

package v4parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 31, 319,
	8, 1, 8, 1, 8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5,
	4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9,
	11, 4, 12, 9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16,
	4, 17, 9, 17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4,
	22, 9, 22, 4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27,
	9, 27, 4, 28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9,
	32, 4, 33, 9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37,
	4, 38, 9, 38, 4, 39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 3,
	2, 6, 2, 90, 10, 2, 13, 2, 14, 2, 91, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 106, 10, 5, 3, 6, 3, 6, 3,
	7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3,
	12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3,
	27, 5, 27, 240, 10, 27, 3, 27, 3, 27, 3, 28, 6, 28, 245, 10, 28, 13, 28,
	14, 28, 246, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 5, 32, 265, 10, 32,
	3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 5, 33, 273, 10, 33, 3, 34, 3,
	34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 5, 34, 282, 10, 34, 3, 35, 6, 35,
	285, 10, 35, 13, 35, 14, 35, 286, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3,
	37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39,
	3, 39, 3, 40, 6, 40, 307, 10, 40, 13, 40, 14, 40, 308, 3, 41, 3, 41, 3,
	41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 2, 2, 43, 6, 2, 8, 3, 10,
	4, 12, 5, 14, 6, 16, 7, 18, 8, 20, 9, 22, 10, 24, 11, 26, 12, 28, 13, 30,
	14, 32, 15, 34, 16, 36, 17, 38, 18, 40, 19, 42, 20, 44, 2, 46, 2, 48, 21,
	50, 22, 52, 2, 54, 23, 56, 2, 58, 24, 60, 25, 62, 2, 64, 2, 66, 26, 68,
	27, 70, 28, 72, 29, 74, 2, 76, 2, 78, 30, 80, 2, 82, 31, 84, 2, 86, 2,
	6, 2, 3, 4, 5, 6, 5, 2, 11, 12, 15, 15, 34, 34, 4, 2, 36, 36, 8222, 8223,
	10, 2, 11, 12, 15, 15, 34, 34, 36, 36, 42, 43, 125, 125, 127, 127, 8222,
	8223, 4, 2, 47, 47, 49, 59, 2, 325, 2, 8, 3, 2, 2, 2, 2, 10, 3, 2, 2, 2,
	2, 12, 3, 2, 2, 2, 2, 14, 3, 2, 2, 2, 2, 16, 3, 2, 2, 2, 2, 18, 3, 2, 2,
	2, 2, 20, 3, 2, 2, 2, 2, 22, 3, 2, 2, 2, 2, 24, 3, 2, 2, 2, 2, 26, 3, 2,
	2, 2, 2, 28, 3, 2, 2, 2, 2, 30, 3, 2, 2, 2, 2, 32, 3, 2, 2, 2, 2, 34, 3,
	2, 2, 2, 2, 36, 3, 2, 2, 2, 2, 38, 3, 2, 2, 2, 2, 40, 3, 2, 2, 2, 3, 42,
	3, 2, 2, 2, 3, 44, 3, 2, 2, 2, 3, 46, 3, 2, 2, 2, 3, 48, 3, 2, 2, 2, 3,
	50, 3, 2, 2, 2, 3, 52, 3, 2, 2, 2, 3, 54, 3, 2, 2, 2, 3, 56, 3, 2, 2, 2,
	3, 58, 3, 2, 2, 2, 3, 60, 3, 2, 2, 2, 3, 62, 3, 2, 2, 2, 4, 64, 3, 2, 2,
	2, 4, 66, 3, 2, 2, 2, 4, 68, 3, 2, 2, 2, 4, 70, 3, 2, 2, 2, 4, 72, 3, 2,
	2, 2, 4, 74, 3, 2, 2, 2, 4, 76, 3, 2, 2, 2, 4, 78, 3, 2, 2, 2, 4, 80, 3,
	2, 2, 2, 5, 82, 3, 2, 2, 2, 5, 84, 3, 2, 2, 2, 5, 86, 3, 2, 2, 2, 6, 89,
	3, 2, 2, 2, 8, 93, 3, 2, 2, 2, 10, 95, 3, 2, 2, 2, 12, 105, 3, 2, 2, 2,
	14, 107, 3, 2, 2, 2, 16, 109, 3, 2, 2, 2, 18, 115, 3, 2, 2, 2, 20, 129,
	3, 2, 2, 2, 22, 136, 3, 2, 2, 2, 24, 144, 3, 2, 2, 2, 26, 152, 3, 2, 2,
	2, 28, 161, 3, 2, 2, 2, 30, 171, 3, 2, 2, 2, 32, 182, 3, 2, 2, 2, 34, 189,
	3, 2, 2, 2, 36, 196, 3, 2, 2, 2, 38, 200, 3, 2, 2, 2, 40, 204, 3, 2, 2,
	2, 42, 206, 3, 2, 2, 2, 44, 210, 3, 2, 2, 2, 46, 214, 3, 2, 2, 2, 48, 218,
	3, 2, 2, 2, 50, 220, 3, 2, 2, 2, 52, 222, 3, 2, 2, 2, 54, 227, 3, 2, 2,
	2, 56, 239, 3, 2, 2, 2, 58, 244, 3, 2, 2, 2, 60, 248, 3, 2, 2, 2, 62, 252,
	3, 2, 2, 2, 64, 256, 3, 2, 2, 2, 66, 264, 3, 2, 2, 2, 68, 272, 3, 2, 2,
	2, 70, 281, 3, 2, 2, 2, 72, 284, 3, 2, 2, 2, 74, 288, 3, 2, 2, 2, 76, 292,
	3, 2, 2, 2, 78, 297, 3, 2, 2, 2, 80, 301, 3, 2, 2, 2, 82, 306, 3, 2, 2,
	2, 84, 310, 3, 2, 2, 2, 86, 315, 3, 2, 2, 2, 88, 90, 9, 2, 2, 2, 89, 88,
	3, 2, 2, 2, 90, 91, 3, 2, 2, 2, 91, 89, 3, 2, 2, 2, 91, 92, 3, 2, 2, 2,
	92, 7, 3, 2, 2, 2, 93, 94, 7, 42, 2, 2, 94, 9, 3, 2, 2, 2, 95, 96, 7, 43,
	2, 2, 96, 11, 3, 2, 2, 2, 97, 98, 7, 67, 2, 2, 98, 99, 7, 80, 2, 2, 99,
	106, 7, 70, 2, 2, 100, 101, 7, 81, 2, 2, 101, 106, 7, 84, 2, 2, 102, 103,
	7, 80, 2, 2, 103, 104, 7, 81, 2, 2, 104, 106, 7, 86, 2, 2, 105, 97, 3,
	2, 2, 2, 105, 100, 3, 2, 2, 2, 105, 102, 3, 2, 2, 2, 106, 13, 3, 2, 2,
	2, 107, 108, 7, 60, 2, 2, 108, 15, 3, 2, 2, 2, 109, 110, 7, 118, 2, 2,
	110, 111, 7, 107, 2, 2, 111, 112, 7, 118, 2, 2, 112, 113, 7, 110, 2, 2,
	113, 114, 7, 103, 2, 2, 114, 17, 3, 2, 2, 2, 115, 116, 7, 108, 2, 2, 116,
	117, 7, 113, 2, 2, 117, 118, 7, 119, 2, 2, 118, 119, 7, 116, 2, 2, 119,
	120, 7, 112, 2, 2, 120, 121, 7, 99, 2, 2, 121, 122, 7, 110, 2, 2, 122,
	123, 7, 97, 2, 2, 123, 124, 7, 118, 2, 2, 124, 125, 7, 107, 2, 2, 125,
	126, 7, 118, 2, 2, 126, 127, 7, 110, 2, 2, 127, 128, 7, 103, 2, 2, 128,
	19, 3, 2, 2, 2, 129, 130, 7, 99, 2, 2, 130, 131, 7, 119, 2, 2, 131, 132,
	7, 118, 2, 2, 132, 133, 7, 106, 2, 2, 133, 134, 7, 113, 2, 2, 134, 135,
	7, 116, 2, 2, 135, 21, 3, 2, 2, 2, 136, 137, 7, 117, 2, 2, 137, 138, 7,
	119, 2, 2, 138, 139, 7, 100, 2, 2, 139, 140, 7, 108, 2, 2, 140, 141, 7,
	103, 2, 2, 141, 142, 7, 101, 2, 2, 142, 143, 7, 118, 2, 2, 143, 23, 3,
	2, 2, 2, 144, 145, 7, 109, 2, 2, 145, 146, 7, 103, 2, 2, 146, 147, 7, 123,
	2, 2, 147, 148, 7, 121, 2, 2, 148, 149, 7, 113, 2, 2, 149, 150, 7, 116,
	2, 2, 150, 151, 7, 102, 2, 2, 151, 25, 3, 2, 2, 2, 152, 153, 7, 104, 2,
	2, 153, 154, 7, 119, 2, 2, 154, 155, 7, 110, 2, 2, 155, 156, 7, 110, 2,
	2, 156, 157, 7, 118, 2, 2, 157, 158, 7, 103, 2, 2, 158, 159, 7, 122, 2,
	2, 159, 160, 7, 118, 2, 2, 160, 27, 3, 2, 2, 2, 161, 162, 7, 114, 2, 2,
	162, 163, 7, 119, 2, 2, 163, 164, 7, 100, 2, 2, 164, 165, 7, 110, 2, 2,
	165, 166, 7, 107, 2, 2, 166, 167, 7, 117, 2, 2, 167, 168, 7, 106, 2, 2,
	168, 169, 7, 103, 2, 2, 169, 170, 7, 102, 2, 2, 170, 29, 3, 2, 2, 2, 171,
	172, 7, 107, 2, 2, 172, 173, 7, 102, 2, 2, 173, 174, 7, 103, 2, 2, 174,
	175, 7, 112, 2, 2, 175, 176, 7, 118, 2, 2, 176, 177, 7, 107, 2, 2, 177,
	178, 7, 104, 2, 2, 178, 179, 7, 107, 2, 2, 179, 180, 7, 103, 2, 2, 180,
	181, 7, 116, 2, 2, 181, 31, 3, 2, 2, 2, 182, 183, 7, 104, 2, 2, 183, 184,
	7, 107, 2, 2, 184, 185, 7, 110, 2, 2, 185, 186, 7, 118, 2, 2, 186, 187,
	7, 103, 2, 2, 187, 188, 7, 116, 2, 2, 188, 33, 3, 2, 2, 2, 189, 190, 7,
	102, 2, 2, 190, 191, 7, 99, 2, 2, 191, 192, 7, 118, 2, 2, 192, 193, 7,
	103, 2, 2, 193, 194, 3, 2, 2, 2, 194, 195, 8, 16, 2, 2, 195, 35, 3, 2,
	2, 2, 196, 197, 7, 125, 2, 2, 197, 198, 3, 2, 2, 2, 198, 199, 8, 17, 3,
	2, 199, 37, 3, 2, 2, 2, 200, 201, 5, 6, 2, 2, 201, 202, 3, 2, 2, 2, 202,
	203, 8, 18, 4, 2, 203, 39, 3, 2, 2, 2, 204, 205, 11, 2, 2, 2, 205, 41,
	3, 2, 2, 2, 206, 207, 9, 3, 2, 2, 207, 208, 3, 2, 2, 2, 208, 209, 8, 20,
	5, 2, 209, 43, 3, 2, 2, 2, 210, 211, 7, 42, 2, 2, 211, 212, 3, 2, 2, 2,
	212, 213, 8, 21, 6, 2, 213, 45, 3, 2, 2, 2, 214, 215, 7, 43, 2, 2, 215,
	216, 3, 2, 2, 2, 216, 217, 8, 22, 7, 2, 217, 47, 3, 2, 2, 2, 218, 219,
	7, 93, 2, 2, 219, 49, 3, 2, 2, 2, 220, 221, 7, 95, 2, 2, 221, 51, 3, 2,
	2, 2, 222, 223, 7, 125, 2, 2, 223, 224, 3, 2, 2, 2, 224, 225, 8, 25, 3,
	2, 225, 226, 8, 25, 8, 2, 226, 53, 3, 2, 2, 2, 227, 228, 7, 127, 2, 2,
	228, 229, 3, 2, 2, 2, 229, 230, 8, 26, 9, 2, 230, 55, 3, 2, 2, 2, 231,
	232, 7, 67, 2, 2, 232, 233, 7, 80, 2, 2, 233, 240, 7, 70, 2, 2, 234, 235,
	7, 81, 2, 2, 235, 240, 7, 84, 2, 2, 236, 237, 7, 80, 2, 2, 237, 238, 7,
	81, 2, 2, 238, 240, 7, 86, 2, 2, 239, 231, 3, 2, 2, 2, 239, 234, 3, 2,
	2, 2, 239, 236, 3, 2, 2, 2, 240, 241, 3, 2, 2, 2, 241, 242, 8, 27, 10,
	2, 242, 57, 3, 2, 2, 2, 243, 245, 10, 4, 2, 2, 244, 243, 3, 2, 2, 2, 245,
	246, 3, 2, 2, 2, 246, 244, 3, 2, 2, 2, 246, 247, 3, 2, 2, 2, 247, 59, 3,
	2, 2, 2, 248, 249, 5, 6, 2, 2, 249, 250, 3, 2, 2, 2, 250, 251, 8, 29, 4,
	2, 251, 61, 3, 2, 2, 2, 252, 253, 11, 2, 2, 2, 253, 254, 3, 2, 2, 2, 254,
	255, 8, 30, 11, 2, 255, 63, 3, 2, 2, 2, 256, 257, 7, 60, 2, 2, 257, 258,
	3, 2, 2, 2, 258, 259, 8, 31, 12, 2, 259, 65, 3, 2, 2, 2, 260, 261, 7, 86,
	2, 2, 261, 265, 7, 81, 2, 2, 262, 263, 7, 47, 2, 2, 263, 265, 7, 47, 2,
	2, 264, 260, 3, 2, 2, 2, 264, 262, 3, 2, 2, 2, 265, 67, 3, 2, 2, 2, 266,
	267, 7, 67, 2, 2, 267, 268, 7, 72, 2, 2, 268, 269, 7, 86, 2, 2, 269, 270,
	7, 71, 2, 2, 270, 273, 7, 84, 2, 2, 271, 273, 7, 64, 2, 2, 272, 266, 3,
	2, 2, 2, 272, 271, 3, 2, 2, 2, 273, 69, 3, 2, 2, 2, 274, 275, 7, 68, 2,
	2, 275, 276, 7, 71, 2, 2, 276, 277, 7, 72, 2, 2, 277, 278, 7, 81, 2, 2,
	278, 279, 7, 84, 2, 2, 279, 282, 7, 71, 2, 2, 280, 282, 7, 62, 2, 2, 281,
	274, 3, 2, 2, 2, 281, 280, 3, 2, 2, 2, 282, 71, 3, 2, 2, 2, 283, 285, 9,
	5, 2, 2, 284, 283, 3, 2, 2, 2, 285, 286, 3, 2, 2, 2, 286, 284, 3, 2, 2,
	2, 286, 287, 3, 2, 2, 2, 287, 73, 3, 2, 2, 2, 288, 289, 7, 125, 2, 2, 289,
	290, 3, 2, 2, 2, 290, 291, 8, 36, 8, 2, 291, 75, 3, 2, 2, 2, 292, 293,
	7, 127, 2, 2, 293, 294, 3, 2, 2, 2, 294, 295, 8, 37, 9, 2, 295, 296, 8,
	37, 13, 2, 296, 77, 3, 2, 2, 2, 297, 298, 5, 6, 2, 2, 298, 299, 3, 2, 2,
	2, 299, 300, 8, 38, 4, 2, 300, 79, 3, 2, 2, 2, 301, 302, 11, 2, 2, 2, 302,
	303, 3, 2, 2, 2, 303, 304, 8, 39, 11, 2, 304, 81, 3, 2, 2, 2, 305, 307,
	10, 3, 2, 2, 306, 305, 3, 2, 2, 2, 307, 308, 3, 2, 2, 2, 308, 306, 3, 2,
	2, 2, 308, 309, 3, 2, 2, 2, 309, 83, 3, 2, 2, 2, 310, 311, 9, 3, 2, 2,
	311, 312, 3, 2, 2, 2, 312, 313, 8, 41, 9, 2, 313, 314, 8, 41, 14, 2, 314,
	85, 3, 2, 2, 2, 315, 316, 11, 2, 2, 2, 316, 317, 3, 2, 2, 2, 317, 318,
	8, 42, 11, 2, 318, 87, 3, 2, 2, 2, 15, 2, 3, 4, 5, 91, 105, 239, 246, 264,
	272, 281, 286, 308, 15, 7, 4, 2, 7, 3, 2, 8, 2, 2, 7, 5, 2, 9, 3, 2, 9,
	4, 2, 9, 17, 2, 6, 2, 2, 9, 5, 2, 9, 19, 2, 9, 6, 2, 9, 23, 2, 9, 20, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "SEARCH", "DATE_MODE", "IN_QUOTE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "'title'", "'journal_title'", "'author'", "'subject'",
	"'keyword'", "'fulltext'", "'published'", "'identifier'", "'filter'", "'date'",
	"", "", "", "", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "LPAREN", "RPAREN", "BOOLEAN", "COLON", "TITLE", "JOURNAL_TITLE", "AUTHOR",
	"SUBJECT", "KEYWORD", "FULLTEXT", "PUBLISHED", "IDENTIFIER", "FILTER",
	"DATE", "LBRACE", "WS1", "ERROR_CHARACTER", "QUOTE", "LBRACKET", "RBRACKET",
	"RBRACE", "SEARCH_WORD", "WS2", "TO", "AFTER", "BEFORE", "DATE_STRING",
	"WS3", "QUOTE_STR",
}

var lexerRuleNames = []string{
	"WS", "LPAREN", "RPAREN", "BOOLEAN", "COLON", "TITLE", "JOURNAL_TITLE",
	"AUTHOR", "SUBJECT", "KEYWORD", "FULLTEXT", "PUBLISHED", "IDENTIFIER",
	"FILTER", "DATE", "LBRACE", "WS1", "ERROR_CHARACTER", "QUOTE", "LPAREN2",
	"RPAREN2", "LBRACKET", "RBRACKET", "LBRACE1", "RBRACE", "BOOLEAN1", "SEARCH_WORD",
	"WS2", "ERROR_CHARACTER2", "COLON2", "TO", "AFTER", "BEFORE", "DATE_STRING",
	"LBRACE2", "RBRACE1", "WS3", "ERROR_CHARACTER3", "QUOTE_STR", "QUOTE2",
	"ERROR_CHARACTER4",
}

type VirgoQueryLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewVirgoQueryLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *VirgoQueryLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewVirgoQueryLexer(input antlr.CharStream) *VirgoQueryLexer {
	l := new(VirgoQueryLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "VirgoQueryLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// VirgoQueryLexer tokens.
const (
	VirgoQueryLexerLPAREN          = 1
	VirgoQueryLexerRPAREN          = 2
	VirgoQueryLexerBOOLEAN         = 3
	VirgoQueryLexerCOLON           = 4
	VirgoQueryLexerTITLE           = 5
	VirgoQueryLexerJOURNAL_TITLE   = 6
	VirgoQueryLexerAUTHOR          = 7
	VirgoQueryLexerSUBJECT         = 8
	VirgoQueryLexerKEYWORD         = 9
	VirgoQueryLexerFULLTEXT        = 10
	VirgoQueryLexerPUBLISHED       = 11
	VirgoQueryLexerIDENTIFIER      = 12
	VirgoQueryLexerFILTER          = 13
	VirgoQueryLexerDATE            = 14
	VirgoQueryLexerLBRACE          = 15
	VirgoQueryLexerWS1             = 16
	VirgoQueryLexerERROR_CHARACTER = 17
	VirgoQueryLexerQUOTE           = 18
	VirgoQueryLexerLBRACKET        = 19
	VirgoQueryLexerRBRACKET        = 20
	VirgoQueryLexerRBRACE          = 21
	VirgoQueryLexerSEARCH_WORD     = 22
	VirgoQueryLexerWS2             = 23
	VirgoQueryLexerTO              = 24
	VirgoQueryLexerAFTER           = 25
	VirgoQueryLexerBEFORE          = 26
	VirgoQueryLexerDATE_STRING     = 27
	VirgoQueryLexerWS3             = 28
	VirgoQueryLexerQUOTE_STR       = 29
)

// VirgoQueryLexer modes.
const (
	VirgoQueryLexerSEARCH = iota + 1
	VirgoQueryLexerDATE_MODE
	VirgoQueryLexerIN_QUOTE
)
